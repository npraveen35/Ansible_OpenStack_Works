- name: copy db create template
  template: src=neutrondb.sql.j2 dest=/tmp/neutrondb.sql

- name: create database
  shell : mysql -u root < /tmp/neutrondb.sql

- name: remove sql
  file: path=/tmp/neutrondb.sql state=absent

- name: list users
  command: "openstack user list"
  register: ulist

- block:
    - command: "openstack user create --domain default --password {{ neutron_password }} neutron"
    - command: "openstack role add --project service --user neutron admin"
    - command: "openstack service create --name neutron --description 'OpenStack Networking' network"
    - command: "openstack endpoint create --region RegionOne network {{ item }} http://{{ ansible_hostname }}:9696"
      with_items:
        - internal
        - public
        - admin
  when: not ansible_check_mode and ulist.stdout.find("neutron") < 0

- name: install packages
  tags: packages
  package: name={{ item }} state=latest
  with_items:
    - neutron-server
    - neutron-plugin-ml2
    - neutron-linuxbridge-agent
    - neutron-l3-agent
    - neutron-dhcp-agent
    - neutron-metadata-agent

- name: install configurations
  template: src=neutron.conf.j2 dest=/etc/neutron/neutron.conf
- template: src=ml2_conf.ini.j2 dest=/etc/neutron/plugins/ml2/ml2_conf.ini
- template: src=linuxbridge_agent.ini.j2 dest=/etc/neutron/plugins/ml2/linuxbridge_agent.ini
- copy: src=l3_agent.ini dest=/etc/neutron/l3_agent.ini
- copy: src=dhcp_agent.ini dest=/etc/neutron/dhcp_agent.ini
- template: src=metadata_agent.ini.j2 dest=/etc/neutron/metadata_agent.ini
- file: src=/etc/neutron/plugins/ml2/ml2_conf.ini dest=/etc/neutron/plugin.ini state=link
  when: not ansible_check_mode
- copy: src=dnsmasq-neutron.conf dest=/etc/neutron/dnsmasq-neutron.conf

- name: populate database
  command: neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head
  become: true
  become_user: neutron
  when: not ansible_check_mode

- name: start services
  tags: service
  service: name={{ item }} state=restarted enabled=yes
  with_items:
    - nova-api
    - neutron-server
    - neutron-linuxbridge-agent
    - neutron-dhcp-agent
    - neutron-metadata-agent
    - neutron-l3-agent


- name: list network
  command: "openstack network list"
  register: nlist

- block:
  - command: "neutron net-create --shared --provider:physical_network {{ provider_network }} --provider:network_type flat {{ provider_network }} --router:external True"
  - command: "neutron subnet-create --name {{ provider_network }} --allocation-pool {{ provider_allocation_pool }} --dns-nameserver {{ provider_nameserver }} --gateway {{ provider_gateway }} {{ provider_network }} {{ provider_network_cidr }}"
  - command: "neutron net-create {{ selfservice_network }}"
  - command: "neutron subnet-create --name {{ selfservice_network }} --dns-nameserver {{ selfservice_nameserver }} --gateway {{ selfservice_gateway }} {{ selfservice_network }} {{ selfservice_network_cidr }}"
  - command: "neutron router-create router"
  - command: "neutron router-interface-add router {{ selfservice_network }}"
  - command: "neutron router-gateway-set router {{ provider_network }}"
  tags: net
  become: true
  become_user: neutron
  when: not ansible_check_mode and nlist.stdout.find("public") < 0
